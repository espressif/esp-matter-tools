name: PyPI release

on:
  push:
    branches:
      - main

jobs:
  build_and_upload:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip build setuptools twine

    - name: Build and upload esp-matter-mfg-tool ${{ github.event.release.tag_name }}
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_PROJECT_TOKEN }}
      run: |
        cd mfg_tool
        PUBLISHED_VERSION=$(curl https://pypi.org/pypi/esp-matter-mfg-tool/json 2>/dev/null | jq -r '.info.version')
        CURRENT_VERSION=$(python setup.py --version 2>/dev/null)
        if [ "$PUBLISHED_VERSION" == "$CURRENT_VERSION" ]; then
          echo "Version ${PUBLISHED_VERSION} already published, skipping..."
          exit 0
        else
          echo "Packaging and publishing new esp-matter-mfg-tool version: ${CURRENT_VERSION}"
          python -m build
          twine check dist/* && twine upload dist/*
        fi

  build_windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip build setuptools

    - name: Build esp-matter-mfg-tool on Windows
      shell: pwsh
      run: |
        cd mfg_tool
        $CURRENT_VERSION = python setup.py --version 2>$null
        Write-Host "Building esp-matter-mfg-tool version: $CURRENT_VERSION on Windows"
        python -m build
        if ($LASTEXITCODE -eq 0) {
          Write-Host "Windows build completed successfully"
        } else {
          Write-Host "Windows build failed"
          exit 1
        }

  test_installation:
    needs: build_and_upload
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']

    steps:
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Wait for PyPI propagation
      run: sleep 60
      shell: bash

    - name: Install published package
      run: |
        python -m pip install --upgrade pip
        python -m pip install esp-matter-mfg-tool

    - name: Test package import
      run: |
        python -c "import mfg_tool; print('Package imported successfully')"

    - name: Test CLI availability
      shell: bash
      run: |
        if command -v esp-matter-mfg-tool &> /dev/null; then
          echo "CLI tool is available"
          esp-matter-mfg-tool --help
        else
          echo "CLI tool not found in PATH, checking if module is callable"
          python -m mfg_tool --help
        fi
